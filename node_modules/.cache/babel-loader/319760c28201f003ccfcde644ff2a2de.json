{"ast":null,"code":"var buildHTML = require(\"./buildHTML\");\n\nvar buildMathML = require(\"./buildMathML\");\n\nvar buildCommon = require(\"./buildCommon\");\n\nvar Options = require(\"./Options\");\n\nvar Settings = require(\"./Settings\");\n\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function (tree, expression, settings) {\n  settings = settings || new Settings({});\n  var startStyle = Style.TEXT;\n\n  if (settings.displayMode) {\n    startStyle = Style.DISPLAY;\n  } // Setup the default options\n\n\n  var options = new Options({\n    style: startStyle,\n    size: \"size5\"\n  }); // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n  // ords), so we build the MathML version first.\n\n  var mathMLNode = buildMathML(tree, expression, options);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n\n  if (settings.displayMode) {\n    return makeSpan([\"katex-display\"], [katexNode]);\n  } else {\n    return katexNode;\n  }\n};\n\nmodule.exports = buildTree;","map":{"version":3,"sources":["/Users/justinf/perseus-configured/node_modules/katex/src/buildTree.js"],"names":["buildHTML","require","buildMathML","buildCommon","Options","Settings","Style","makeSpan","buildTree","tree","expression","settings","startStyle","TEXT","displayMode","DISPLAY","options","style","size","mathMLNode","htmlNode","katexNode","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIK,KAAK,GAAGL,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIM,QAAQ,GAAGJ,WAAW,CAACI,QAA3B;;AAEA,IAAIC,SAAS,GAAG,UAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqC;AACjDA,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAIN,QAAJ,CAAa,EAAb,CAAvB;AAEA,MAAIO,UAAU,GAAGN,KAAK,CAACO,IAAvB;;AACA,MAAIF,QAAQ,CAACG,WAAb,EAA0B;AACtBF,IAAAA,UAAU,GAAGN,KAAK,CAACS,OAAnB;AACH,GANgD,CAQjD;;;AACA,MAAIC,OAAO,GAAG,IAAIZ,OAAJ,CAAY;AACtBa,IAAAA,KAAK,EAAEL,UADe;AAEtBM,IAAAA,IAAI,EAAE;AAFgB,GAAZ,CAAd,CATiD,CAcjD;AACA;;AACA,MAAIC,UAAU,GAAGjB,WAAW,CAACO,IAAD,EAAOC,UAAP,EAAmBM,OAAnB,CAA5B;AACA,MAAII,QAAQ,GAAGpB,SAAS,CAACS,IAAD,EAAOO,OAAP,CAAxB;AAEA,MAAIK,SAAS,GAAGd,QAAQ,CAAC,CAAC,OAAD,CAAD,EAAY,CAChCY,UADgC,EACpBC,QADoB,CAAZ,CAAxB;;AAIA,MAAIT,QAAQ,CAACG,WAAb,EAA0B;AACtB,WAAOP,QAAQ,CAAC,CAAC,eAAD,CAAD,EAAoB,CAACc,SAAD,CAApB,CAAf;AACH,GAFD,MAEO;AACH,WAAOA,SAAP;AACH;AACJ,CA5BD;;AA8BAC,MAAM,CAACC,OAAP,GAAiBf,SAAjB","sourcesContent":["var buildHTML = require(\"./buildHTML\");\nvar buildMathML = require(\"./buildMathML\");\nvar buildCommon = require(\"./buildCommon\");\nvar Options = require(\"./Options\");\nvar Settings = require(\"./Settings\");\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function(tree, expression, settings) {\n    settings = settings || new Settings({});\n\n    var startStyle = Style.TEXT;\n    if (settings.displayMode) {\n        startStyle = Style.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new Options({\n        style: startStyle,\n        size: \"size5\"\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = makeSpan([\"katex\"], [\n        mathMLNode, htmlNode\n    ]);\n\n    if (settings.displayMode) {\n        return makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nmodule.exports = buildTree;\n"]},"metadata":{},"sourceType":"script"}