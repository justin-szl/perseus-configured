{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return']) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError('Invalid attempt to destructure non-iterable instance');\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _util = require('./util');\n\nvar _inject = require('./inject');\n/* ::\nimport type { SelectorHandler } from './generate.js';\nexport type SheetDefinition = { [id:string]: any };\nexport type SheetDefinitions = SheetDefinition | SheetDefinition[];\ntype RenderFunction = () => string;\ntype Extension = {\n    selectorHandler: SelectorHandler\n};\nexport type MaybeSheetDefinition = SheetDefinition | false | null | void\n*/\n\n\nvar StyleSheet = {\n  create: function create(sheetDefinition\n  /* : SheetDefinition */\n  ) {\n    return (0, _util.mapObj)(sheetDefinition, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var key = _ref2[0];\n      var val = _ref2[1];\n      var stringVal = JSON.stringify(val);\n      return [key, {\n        _len: stringVal.length,\n        _name: process.env.NODE_ENV === 'production' ? (0, _util.hashString)(stringVal) : key + '_' + (0, _util.hashString)(stringVal),\n        _definition: val\n      }];\n    });\n  },\n  rehydrate: function rehydrate() {\n    var renderedClassNames\n    /* : string[] */\n    = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    (0, _inject.addRenderedClassNames)(renderedClassNames);\n  }\n};\n/**\n * Utilities for using Aphrodite server-side.\n */\n\nvar StyleSheetServer = {\n  renderStatic: function renderStatic(renderFunc\n  /* : RenderFunction */\n  ) {\n    (0, _inject.reset)();\n    (0, _inject.startBuffering)();\n    var html = renderFunc();\n    var cssContent = (0, _inject.flushToString)();\n    return {\n      html: html,\n      css: {\n        content: cssContent,\n        renderedClassNames: (0, _inject.getRenderedClassNames)()\n      }\n    };\n  }\n};\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\n\nvar StyleSheetTestUtils = {\n  /**\n   * Prevent styles from being injected into the DOM.\n   *\n   * This is useful in situations where you'd like to test rendering UI\n   * components which use Aphrodite without any of the side-effects of\n   * Aphrodite happening. Particularly useful for testing the output of\n   * components when you have no DOM, e.g. testing in Node without a fake DOM.\n   *\n   * Should be paired with a subsequent call to\n   * clearBufferAndResumeStyleInjection.\n   */\n  suppressStyleInjection: function suppressStyleInjection() {\n    (0, _inject.reset)();\n    (0, _inject.startBuffering)();\n  },\n\n  /**\n   * Opposite method of preventStyleInject.\n   */\n  clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {\n    (0, _inject.reset)();\n  }\n};\n/**\n * Generate the Aphrodite API exports, with given `selectorHandlers` and\n * `useImportant` state.\n */\n\nvar makeExports = function makeExports(useImportant,\n/* : boolean */\nselectorHandlers\n/* : SelectorHandler[] */\n) {\n  return {\n    StyleSheet: _extends({}, StyleSheet, {\n      /**\n       * Returns a version of the exports of Aphrodite (i.e. an object\n       * with `css` and `StyleSheet` properties) which have some\n       * extensions included.\n       *\n       * @param {Array.<Object>} extensions: An array of extensions to\n       *     add to this instance of Aphrodite. Each object should have a\n       *     single property on it, defining which kind of extension to\n       *     add.\n       * @param {SelectorHandler} [extensions[].selectorHandler]: A\n       *     selector handler extension. See `defaultSelectorHandlers` in\n       *     generate.js.\n       *\n       * @returns {Object} An object containing the exports of the new\n       *     instance of Aphrodite.\n       */\n      extend: function extend(extensions\n      /* : Extension[] */\n      ) {\n        var extensionSelectorHandlers = extensions // Pull out extensions with a selectorHandler property\n        .map(function (extension) {\n          return extension.selectorHandler;\n        }) // Remove nulls (i.e. extensions without a selectorHandler\n        // property).\n        .filter(function (handler) {\n          return handler;\n        });\n        return makeExports(useImportant, selectorHandlers.concat(extensionSelectorHandlers));\n      }\n    }),\n    StyleSheetServer: StyleSheetServer,\n    StyleSheetTestUtils: StyleSheetTestUtils,\n    css: function css()\n    /* : MaybeSheetDefinition[] */\n    {\n      for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n        styleDefinitions[_key] = arguments[_key];\n      }\n\n      return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions, selectorHandlers);\n    }\n  };\n};\n\nmodule.exports = makeExports;","map":{"version":3,"sources":["/Users/justinf/perseus-configured/node_modules/aphrodite/lib/exports.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","_util","require","_inject","StyleSheet","create","sheetDefinition","mapObj","_ref","_ref2","val","stringVal","JSON","stringify","_len","_name","process","env","NODE_ENV","hashString","_definition","rehydrate","renderedClassNames","addRenderedClassNames","StyleSheetServer","renderStatic","renderFunc","reset","startBuffering","html","cssContent","flushToString","css","content","getRenderedClassNames","StyleSheetTestUtils","suppressStyleInjection","clearBufferAndResumeStyleInjection","makeExports","useImportant","selectorHandlers","extend","extensions","extensionSelectorHandlers","map","extension","selectorHandler","filter","handler","concat","styleDefinitions","_key","injectAndGetClassName","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _util = require('./util');\n\nvar _inject = require('./inject');\n\n/* ::\nimport type { SelectorHandler } from './generate.js';\nexport type SheetDefinition = { [id:string]: any };\nexport type SheetDefinitions = SheetDefinition | SheetDefinition[];\ntype RenderFunction = () => string;\ntype Extension = {\n    selectorHandler: SelectorHandler\n};\nexport type MaybeSheetDefinition = SheetDefinition | false | null | void\n*/\n\nvar StyleSheet = {\n    create: function create(sheetDefinition /* : SheetDefinition */) {\n        return (0, _util.mapObj)(sheetDefinition, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2);\n\n            var key = _ref2[0];\n            var val = _ref2[1];\n\n            var stringVal = JSON.stringify(val);\n            return [key, {\n                _len: stringVal.length,\n                _name: process.env.NODE_ENV === 'production' ? (0, _util.hashString)(stringVal) : key + '_' + (0, _util.hashString)(stringVal),\n                _definition: val\n            }];\n        });\n    },\n\n    rehydrate: function rehydrate() {\n        var renderedClassNames /* : string[] */ = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n        (0, _inject.addRenderedClassNames)(renderedClassNames);\n    }\n};\n\n/**\n * Utilities for using Aphrodite server-side.\n */\nvar StyleSheetServer = {\n    renderStatic: function renderStatic(renderFunc /* : RenderFunction */) {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n        var html = renderFunc();\n        var cssContent = (0, _inject.flushToString)();\n\n        return {\n            html: html,\n            css: {\n                content: cssContent,\n                renderedClassNames: (0, _inject.getRenderedClassNames)()\n            }\n        };\n    }\n};\n\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\nvar StyleSheetTestUtils = {\n    /**\n     * Prevent styles from being injected into the DOM.\n     *\n     * This is useful in situations where you'd like to test rendering UI\n     * components which use Aphrodite without any of the side-effects of\n     * Aphrodite happening. Particularly useful for testing the output of\n     * components when you have no DOM, e.g. testing in Node without a fake DOM.\n     *\n     * Should be paired with a subsequent call to\n     * clearBufferAndResumeStyleInjection.\n     */\n    suppressStyleInjection: function suppressStyleInjection() {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n    },\n\n    /**\n     * Opposite method of preventStyleInject.\n     */\n    clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {\n        (0, _inject.reset)();\n    }\n};\n\n/**\n * Generate the Aphrodite API exports, with given `selectorHandlers` and\n * `useImportant` state.\n */\nvar makeExports = function makeExports(useImportant, /* : boolean */\nselectorHandlers /* : SelectorHandler[] */\n) {\n    return {\n        StyleSheet: _extends({}, StyleSheet, {\n\n            /**\n             * Returns a version of the exports of Aphrodite (i.e. an object\n             * with `css` and `StyleSheet` properties) which have some\n             * extensions included.\n             *\n             * @param {Array.<Object>} extensions: An array of extensions to\n             *     add to this instance of Aphrodite. Each object should have a\n             *     single property on it, defining which kind of extension to\n             *     add.\n             * @param {SelectorHandler} [extensions[].selectorHandler]: A\n             *     selector handler extension. See `defaultSelectorHandlers` in\n             *     generate.js.\n             *\n             * @returns {Object} An object containing the exports of the new\n             *     instance of Aphrodite.\n             */\n            extend: function extend(extensions /* : Extension[] */) {\n                var extensionSelectorHandlers = extensions\n                // Pull out extensions with a selectorHandler property\n                .map(function (extension) {\n                    return extension.selectorHandler;\n                })\n                // Remove nulls (i.e. extensions without a selectorHandler\n                // property).\n                .filter(function (handler) {\n                    return handler;\n                });\n\n                return makeExports(useImportant, selectorHandlers.concat(extensionSelectorHandlers));\n            }\n        }),\n\n        StyleSheetServer: StyleSheetServer,\n        StyleSheetTestUtils: StyleSheetTestUtils,\n\n        css: function css() /* : MaybeSheetDefinition[] */{\n            for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n                styleDefinitions[_key] = arguments[_key];\n            }\n\n            return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions, selectorHandlers);\n        }\n    };\n};\n\nmodule.exports = makeExports;"]},"metadata":{},"sourceType":"script"}