{"ast":null,"code":"/* eslint no-unused-vars:0 */\nvar Style = require(\"./Style\");\n\nvar cjkRegex = require(\"./unicodeRegexes\").cjkRegex;\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\n// the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the folllowing script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\n\n\nvar sigmas = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250] // sigma22\n\n}; // These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\n\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1; // This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\n\nvar ptPerEm = 10.0; // The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\n\nvar doubleRuleSep = 2.0 / ptPerEm;\n/**\n * This is just a mapping from common names to real metrics\n */\n\nvar metrics = {\n  defaultRuleThickness: xi8,\n  bigOpSpacing1: xi9,\n  bigOpSpacing2: xi10,\n  bigOpSpacing3: xi11,\n  bigOpSpacing4: xi12,\n  bigOpSpacing5: xi13,\n  ptPerEm: ptPerEm,\n  doubleRuleSep: doubleRuleSep\n}; // This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\nvar metricMap = require(\"./fontMetricsData\"); // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\n\nvar extraCharacterMap = {\n  // Latin-1\n  'À': 'A',\n  'Á': 'A',\n  'Â': 'A',\n  'Ã': 'A',\n  'Ä': 'A',\n  'Å': 'A',\n  'Æ': 'A',\n  'Ç': 'C',\n  'È': 'E',\n  'É': 'E',\n  'Ê': 'E',\n  'Ë': 'E',\n  'Ì': 'I',\n  'Í': 'I',\n  'Î': 'I',\n  'Ï': 'I',\n  'Ð': 'D',\n  'Ñ': 'N',\n  'Ò': 'O',\n  'Ó': 'O',\n  'Ô': 'O',\n  'Õ': 'O',\n  'Ö': 'O',\n  'Ø': 'O',\n  'Ù': 'U',\n  'Ú': 'U',\n  'Û': 'U',\n  'Ü': 'U',\n  'Ý': 'Y',\n  'Þ': 'o',\n  'ß': 'B',\n  'à': 'a',\n  'á': 'a',\n  'â': 'a',\n  'ã': 'a',\n  'ä': 'a',\n  'å': 'a',\n  'æ': 'a',\n  'ç': 'c',\n  'è': 'e',\n  'é': 'e',\n  'ê': 'e',\n  'ë': 'e',\n  'ì': 'i',\n  'í': 'i',\n  'î': 'i',\n  'ï': 'i',\n  'ð': 'd',\n  'ñ': 'n',\n  'ò': 'o',\n  'ó': 'o',\n  'ô': 'o',\n  'õ': 'o',\n  'ö': 'o',\n  'ø': 'o',\n  'ù': 'u',\n  'ú': 'u',\n  'û': 'u',\n  'ü': 'u',\n  'ý': 'y',\n  'þ': 'o',\n  'ÿ': 'y',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nvar getCharacterMetrics = function (character, style) {\n  var ch = character.charCodeAt(0);\n\n  if (character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n  } else if (cjkRegex.test(character[0])) {\n    ch = 'M'.charCodeAt(0);\n  }\n\n  var metrics = metricMap[style][ch];\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n};\n\nmodule.exports = {\n  metrics: metrics,\n  sigmas: sigmas,\n  getCharacterMetrics: getCharacterMetrics\n};","map":{"version":3,"sources":["/Users/justinf/perseus-configured/node_modules/katex/src/fontMetrics.js"],"names":["Style","require","cjkRegex","sigmas","slant","space","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","xi1","xi2","xi3","xi4","xi5","xi6","xi7","xi8","xi9","xi10","xi11","xi12","xi13","ptPerEm","doubleRuleSep","metrics","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","metricMap","extraCharacterMap","getCharacterMetrics","character","style","ch","charCodeAt","test","depth","height","italic","skew","width","module","exports"],"mappings":"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","sourcesContent":["/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\nvar cjkRegex = require(\"./unicodeRegexes\").cjkRegex;\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\n// the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the folllowing script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmas = {\n    slant: [0.250, 0.250, 0.250],       // sigma1\n    space: [0.000, 0.000, 0.000],       // sigma2\n    stretch: [0.000, 0.000, 0.000],     // sigma3\n    shrink: [0.000, 0.000, 0.000],      // sigma4\n    xHeight: [0.431, 0.431, 0.431],     // sigma5\n    quad: [1.000, 1.171, 1.472],        // sigma6\n    extraSpace: [0.000, 0.000, 0.000],  // sigma7\n    num1: [0.677, 0.732, 0.925],        // sigma8\n    num2: [0.394, 0.384, 0.387],        // sigma9\n    num3: [0.444, 0.471, 0.504],        // sigma10\n    denom1: [0.686, 0.752, 1.025],      // sigma11\n    denom2: [0.345, 0.344, 0.532],      // sigma12\n    sup1: [0.413, 0.503, 0.504],        // sigma13\n    sup2: [0.363, 0.431, 0.404],        // sigma14\n    sup3: [0.289, 0.286, 0.294],        // sigma15\n    sub1: [0.150, 0.143, 0.200],        // sigma16\n    sub2: [0.247, 0.286, 0.400],        // sigma17\n    supDrop: [0.386, 0.353, 0.494],     // sigma18\n    subDrop: [0.050, 0.071, 0.100],     // sigma19\n    delim1: [2.390, 1.700, 1.980],      // sigma20\n    delim2: [1.010, 1.157, 1.420],      // sigma21\n    axisHeight: [0.250, 0.250, 0.250]  // sigma22\n};\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    doubleRuleSep: doubleRuleSep\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n// These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\nvar extraCharacterMap = {\n    // Latin-1\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'A',\n    'Å': 'A',\n    'Æ': 'A',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'U',\n    'Ý': 'Y',\n    'Þ': 'o',\n    'ß': 'B',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'a',\n    'å': 'a',\n    'æ': 'a',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'u',\n    'ý': 'y',\n    'þ': 'o',\n    'ÿ': 'y',\n\n    // Cyrillic\n    'А': 'A',\n    'Б': 'B',\n    'В': 'B',\n    'Г': 'F',\n    'Д': 'A',\n    'Е': 'E',\n    'Ж': 'K',\n    'З': '3',\n    'И': 'N',\n    'Й': 'N',\n    'К': 'K',\n    'Л': 'N',\n    'М': 'M',\n    'Н': 'H',\n    'О': 'O',\n    'П': 'N',\n    'Р': 'P',\n    'С': 'C',\n    'Т': 'T',\n    'У': 'y',\n    'Ф': 'O',\n    'Х': 'X',\n    'Ц': 'U',\n    'Ч': 'h',\n    'Ш': 'W',\n    'Щ': 'W',\n    'Ъ': 'B',\n    'Ы': 'X',\n    'Ь': 'B',\n    'Э': '3',\n    'Ю': 'X',\n    'Я': 'R',\n    'а': 'a',\n    'б': 'b',\n    'в': 'a',\n    'г': 'r',\n    'д': 'y',\n    'е': 'e',\n    'ж': 'm',\n    'з': 'e',\n    'и': 'n',\n    'й': 'n',\n    'к': 'n',\n    'л': 'n',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'n',\n    'р': 'p',\n    'с': 'c',\n    'т': 'o',\n    'у': 'y',\n    'ф': 'b',\n    'х': 'x',\n    'ц': 'n',\n    'ч': 'n',\n    'ш': 'w',\n    'щ': 'w',\n    'ъ': 'a',\n    'ы': 'm',\n    'ь': 'a',\n    'э': 'e',\n    'ю': 'm',\n    'я': 'r'\n};\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function(character, style) {\n    var ch = character.charCodeAt(0);\n    if (character[0] in extraCharacterMap) {\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\n    } else if (cjkRegex.test(character[0])) {\n        ch = 'M'.charCodeAt(0);\n    }\n    var metrics = metricMap[style][ch];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4]\n        };\n    }\n};\n\nmodule.exports = {\n    metrics: metrics,\n    sigmas: sigmas,\n    getCharacterMetrics: getCharacterMetrics\n};\n"]},"metadata":{},"sourceType":"script"}